name: {{ cookiecutter.project_name }} CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python {{ "${{ matrix.python-version }}" }}
        uses: actions/setup-python@v5
        with:
          python-version: {{ "${{ matrix.python-version }}" }}
      - name: Install
        run: pip install .[test]
      - name: Test
        run: pytest
  pypi:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    permissions:
      contents: read
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/{{ cookiecutter.pypi_name }}/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Dependencies
        run: python3 -m pip install --user build
      - name: Build
        run: python3 -m build
      - name: Upload
        uses: pypa/gh-action-pypi-publish@release/v1
  json:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Dependencies
        run: python3 -m pip install --user pigeon.js .
      - name: Build
        run: python3 -m pigeon_js {{ cookiecutter.project_slug }}
      - name: Create Release
        env:
          GITHUB_TOKEN: {{ "${{ github.token }}" }}
        run: gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""
      - name: Upload JSON
        env:
          GITHUB_TOKEN: {{ "${{ github.token }}" }}
        run: gh release upload "$GITHUB_REF_NAME" TEM_comms.json --repo "$GITHUB_REPOSITORY"
      - name: Push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "{{ cookiecutter.author_email }}"
          mv {{ cookiecutter.project_slug }}.json {{ cookiecutter.project_slug }}.json.new
          git fetch origin
          git checkout origin/json && git checkout -b json || git switch --orphan json
          mv {{ cookiecutter.project_slug }}.json.new {{ cookiecutter.project_slug }}.json
          cp {{ cookiecutter.project_slug }}.json {{ cookiecutter.project_slug }}_$GITHUB_REF_NAME.json
          git add {{ cookiecutter.project_slug }}.json {{ cookiecutter.project_slug }}_$GITHUB_REF_NAME.json
          git commit -m "Updating JSON message definitions."
          git push origin json
